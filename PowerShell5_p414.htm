<html xmlns:v="urn:schemas-microsoft-com:vml xml:lang="hu" lang="hu""
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=iso-8859-2">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 15">
<meta name=Originator content="Microsoft Word 15">
<link rel=File-List href="PowerShell5_files/filelist.xml">
<link rel=Edit-Time-Data href="PowerShell5_files/editdata.mso">
<link rel=OLE-Object-Data href="PowerShell5_files/oledata.mso">


<title>5.4 </title>


<link rel=dataStoreItem href="PowerShell5_files/item0001.xml"
target="PowerShell5_files/props002.xml">
<link rel=themeData href="PowerShell5_files/themedata.thmx">
<link rel=colorSchemeMapping href="PowerShell5_files/colorschememapping.xml">




<link rel="StyleSheet" href="PowerShell5.css">





</head>

<body lang=EN-US link=blue vlink=purple style='tab-interval:35.4pt;word-wrap:
break-word'>

<h2 style='mso-list:l1 level2 lfo1'><span style='mso-bookmark:_Toc197149138'><span
style='mso-bookmark:_Toc179036917'><a name="_Toc204716592"></a><a
name="_Toc209116135"><span style='mso-bookmark:_Toc204716592'>
<span lang=HU>COM-objektumok</span></span></a></span></span></h2>

<p class=SzvegCxSpFirst><span lang=HU>A Component Object Model (COM) a
komponens alapú rendszerek fejlesztésének Microsoft féle szabványa. Lehetővé
teszi, hogy a COM-ügyfelek bináris szinten hívjanak meg olyan függvényeket,
amelyeket a COM-objektumok számukra elérhetővé tesznek. A COM-objektumok
mindegyike egyedileg azonosítható, önálló komponens, a különféle alkalmazások,
és más komponensek egy jól meghatározott csatolófelületen keresztül vehetik
igénybe az adott komponens szolgáltatásait. </span></p>

<p class=SzvegCxSpMiddle><span lang=HU>A Microsoft is COM-komponensekkel tette
lehetővé a hozzáférést az operációs rendszer függvényeihez, így a
rendszerfelügyelettel kapcsolatos szkriptek igen jelentős része használ
COM-objektumokat; segítségükkel érhetjük el a rendszer különféle elemeit,
újrahasznosíthatjuk a már létező, előre megírt funkciókat. PowerShell esetén
gyakran még akkor is COM-objektumot használunk, amikor látszólag nem, mivel a
.NET rendszerfelügyelettel kapcsolatos osztályainak legtöbbje titokban szintén
a megfelelő COM-objektum metódusait hívogatja (ADSI, WMI, stb.). </span></p>

<p class=SzvegCxSpLast><span lang=HU>A szkriptjeinkben használt COM-objektumok
mindegyike tehát olyan funkcionalitás-gyűjtemény, amelyet gondos kezek előre
elkészítettek, és jól felhasználható formában összecsomagoltak számunkra. Ezek
az objektumok szinte minden esetben bináris formában léteznek, gépünkön egy
dinamikusan csatolt könyvtár (dll), vagy Active-X kontroll (ocx) képében
találhatók meg. Szerencsére a COM-objektumok belső felépítéséről,
adatszerkezeteiről semmit nem kell tudnunk ahhoz, hogy megírhassuk a velük
kommunikáló szkriptet, és felhasználhassuk a bennük rejtőző képességeket. Az
objektumokkal való kommunikáció metódusaik meghívását és tulajdonságaik
beállítását jelenti; a rendszerfelügyeleti szkriptek legfontosabb funkciói
ilyen módon valósíthatók meg.</span></p>

<P><P><BR><BR><P class=MsoNormal style="text-align:center;font-size:10"><a href="http://www.technoriversoft.com/wordtohtmlconversion.html">Word To HTML Converter</a>

</body>

</html>

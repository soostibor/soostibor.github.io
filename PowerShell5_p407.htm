<html xmlns:v="urn:schemas-microsoft-com:vml xml:lang="hu" lang="hu""
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=iso-8859-2">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 15">
<meta name=Originator content="Microsoft Word 15">
<link rel=File-List href="PowerShell5_files/filelist.xml">
<link rel=Edit-Time-Data href="PowerShell5_files/editdata.mso">
<link rel=OLE-Object-Data href="PowerShell5_files/oledata.mso">


<title>5.2.7 </title>


<link rel=dataStoreItem href="PowerShell5_files/item0001.xml"
target="PowerShell5_files/props002.xml">
<link rel=themeData href="PowerShell5_files/themedata.thmx">
<link rel=colorSchemeMapping href="PowerShell5_files/colorschememapping.xml">




<link rel="StyleSheet" href="PowerShell5.css">





</head>

<body lang=EN-US link=blue vlink=purple style='tab-interval:35.4pt;word-wrap:
break-word'>

<h3 style='mso-list:l1 level3 lfo1'><a name="_Toc179036916"></a><a
name="_Toc204716585"></a><a name="_Toc209116128"><span style='mso-bookmark:
_Toc204716585'><span style='mso-bookmark:_Toc179036916'>
<span lang=HU>Érték- és
referenciatípusok</span></span></span></a></h3>

<p class=SzvegCxSpFirst><span lang=HU>A .NET keretrendszerben két alapvetően
eltérő típussal találkozhatunk. Az érték típusok (ilyen például az int, a byte,
vagy a char) a veremmemóriában jönnek létre, és helyük automatikusan
felszabadul, amikor a deklaráló kódblokk véget ér, vagyis nincs szükségük a
szemétgyűjtő szolgáltatásaira. Ha értékadásban használjuk őket, akkor nem egy
rájuk mutató referencia, hanem tényleges értékük másolódik át. Minden egyes
érték típusú változóhoz saját, önálló memóriaterület tartozik, vagyis az egyik
változón végzett művelet egyetlen másik változó tartalmát sem változtathatja
meg. Saját magunk is létrehozhatunk érték szerinti típusokat a „struct”
kulcsszóval. Ilyen struktúra például az int típushoz tartozó </span><span
class=KdInlineChar><span lang=HU style='mso-bidi-font-family:"Times New Roman"'>System.Int32</span></span><span
lang=HU> is, amely az osztályokhoz hasonlóan adatmezőket és metódusokat is
tartalmazhat.</span></p>

<p class=SzvegCxSpMiddle><span lang=HU>A referenciatípusok nem magát az adatot,
hanem egy memóriacímre való hivatkozást tárolnak. Egy memóriacímre több
hivatkozás is mutathat, tehát egy referencián (vagyis az általa mutatott
objektumon) végzett műveletek a többi referenciát is érintik. A referenciatípusokat
a </span><span class=KdInlineChar><span lang=HU style='mso-bidi-font-family:
"Times New Roman"'>new</span></span><span lang=HU> operátorral hozzuk létre, és
azok a szemétgyűjtő (GC) által kezelt memóriába kerülnek (vagyis a felügyelt
heap-re). Amikor az értékadásokban referenciatípusokat használunk, mindig csak
a referencia értéke másolódik át, a valódi objektumhoz nem nyúlunk hozzá.</span></p>

<p class=SzvegCxSpLast><span lang=HU>Valamennyi érték és referenciatípus
elérhető </span><span class=KdInlineChar><span lang=HU style='mso-bidi-font-family:
"Times New Roman"'>System.Object</span></span><span lang=HU> osztályú
referencia segítségével. Ha az érték szerinti típust referencián keresztül
érjük el, akkor a fordító olyan kódot hoz létre, amely a típusnak megfelelő
memóriát a heap-en foglalja le, és átmásolja ide a változó tartalmát a
veremből. Ezt az eljárást „Boxing”-nak (dobozolásnak) nevezzük.</span></p>

<P><P><BR><BR><P class=MsoNormal style="text-align:center;font-size:10"><a href="http://www.technoriversoft.com/wordtohtmlconversion.html">Word To HTML Converter</a>

</body>

</html>

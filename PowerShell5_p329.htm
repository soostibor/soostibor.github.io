<html xmlns:v="urn:schemas-microsoft-com:vml xml:lang="hu" lang="hu""
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=iso-8859-2">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 15">
<meta name=Originator content="Microsoft Word 15">
<link rel=File-List href="PowerShell5_files/filelist.xml">
<link rel=Edit-Time-Data href="PowerShell5_files/editdata.mso">
<link rel=OLE-Object-Data href="PowerShell5_files/oledata.mso">


<title>2.31 </title>


<link rel=dataStoreItem href="PowerShell5_files/item0001.xml"
target="PowerShell5_files/props002.xml">
<link rel=themeData href="PowerShell5_files/themedata.thmx">
<link rel=colorSchemeMapping href="PowerShell5_files/colorschememapping.xml">




<link rel="StyleSheet" href="PowerShell5.css">





</head>

<body lang=EN-US link=blue vlink=purple style='tab-interval:35.4pt;word-wrap:
break-word'>

<h2 style='mso-list:l1 level2 lfo1'><a name="_Toc204716505"></a><a
name="_Toc209116048"><span style='mso-bookmark:_Toc204716505'>
<span lang=HU>Esemény-vezérelt
futtatás</span></span></a></h2>

<p class=SzvegCxSpFirst><span lang=HU>Előfordulnak olyan helyzetek, amikor a
szkriptünknek valamilyen eseményre kellene reagálnia: eltelik valamennyi idő,
létrejön egy új meghajtó, beesik egy speciális eseménynapló-bejegyzés, új fájl
vagy könyvtár jön létre egy mappában, stb. Ilyen helyzetekben készíthetünk egy
ciklust, ami az esemény bekövetkezéséig fut, és periodikusan ellenőrzi, hogy az
esemény bekövetkezett-e. Ez nem annyira profi megoldás, mert nehéz eldönteni,
hogy milyen rendszerességgel ellenőrizzük az esemény bekövetkeztét? Ha túl gyakran
ellenőrizzük, akkor szegény számítógépünk értékes processzorteljesítményét erre
pazaroljuk. Ha túl ritkásan, akkor meg esetleg túl sokára reagálunk az
eseményre. A profi megoldás az, hogy felhasználjuk a Windows eseménykezelő
rendszerét, merthogy az egész Windows működésének alapja az eseménykezelés: a
kattintások, billentyűleütések mind-mind eseményeket generálnak, amelyeket az
egyes ablakok lekezelnek. Szerencsére ehhez az infrastruktúrához a PowerShell
2.0-ban már hozzáférünk.</span></p>

<p class=SzvegCxSpLast><span lang=HU>A PowerShell 2.0-ban háromfajta eseményre
tudunk reagálni: </span><span class=EnglishChar><span style='mso-bidi-font-family:
"Times New Roman"'>EngineEvent</span></span><span lang=HU>, </span><span
class=EnglishChar><span style='mso-bidi-font-family:"Times New Roman"'>ObjectEvent</span></span><span
lang=HU> és </span><span class=EnglishChar><span style='mso-bidi-font-family:
"Times New Roman"'>WMIEvent</span></span><span lang=HU>. A reagálás akkor
történhet meg, ha előtte „előfizetünk” valamely eseményre. De nézzük ezeket
egyesével!</span></p>

<P><P><BR><BR><P class=MsoNormal style="text-align:center;font-size:10"><a href="http://www.technoriversoft.com/wordtohtmlconversion.html">Word To HTML Converter</a>

</body>

</html>
